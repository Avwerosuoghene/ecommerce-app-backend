name: deploy-app

on: 
  push: 
    branches:
      - main


jobs:

  build:
  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        
      - name: Buld and push Docker images
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}
          repository: kesuion/ecommerce-backend-app
          
  deploy:
#runs once build is completed
    needs: build
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        
      - name: ssh into server using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            #cd into app dir
            #cd ecommerce-backend
            
            #stops running container for app
            #docker kill $(docker ps -q --filter ancestor=kesuion/ecommerce-backend-app)
            
            ACTIVE_CONTAINER=$(docker ps -q --filter ancestor=kesuion/ecommerce-backend-app)
            if [ "$ACTIVE_CONTAINER" != "" ]; then 

            docker kill $(docker ps -q --filter ancestor=kesuion/ecommerce-backend-app)

            #remove specified container based on image name
            docker rm $(docker ps -a -q --filter ancestor=kesuion/ecommerce-backend-app)
            
            
            echo "yes"

            #enter docker container and stop pm2 run-time
            #docker exec -it $(docker ps -q --filter ancestor=kesuion/ecommerce-backend-app) sh
            
            #stop running pm2 process
            #docker kill pm2 app
            
            #delete all pm2 instance
            #pm2 delete all

            #exit container
            #exit
            fi  
           

            #removes specified image
            docker rmi $(docker images --format "{{.ID}}" kesuion/ecommerce-backend-app) 
            
            #remove specified container based on image name
            docker rm $(docker ps -a -q --filter ancestor=kesuion/ecommerce-backend-app)
            
            #removes specified image
            docker rmi $(docker images --format "{{.ID}}" kesuion/ecommerce-backend-app) 
            
            #pull and run docker container . The -d flag ensures docker runs in the background
            docker run -p 9000:9000 -d kesuion/ecommerce-backend-app
            
            exit
          
      
      
          
      
#       - run: docker build -t kesuion/ecommerce-backend-app .
#       - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#         env:
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
#       - run: docker push kesuion/ecommerce-backend-app
